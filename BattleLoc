package com.company.Locations;

import java.util.Random;

import com.company.Obstacle;
import com.company.Player;

public abstract class BattleLoc extends Location {
    private Obstacle obstacle;
    private String award;
    private int maxObstacle;
    Random random=new Random();

    public BattleLoc(Player player, String name, Obstacle obstacle,String award,int maxObstacle) {
        super(player, name);
        this.award = award;
        this.obstacle=obstacle;
        this.maxObstacle = maxObstacle;
    }

    @Override
    public boolean onLocation() {
        int obsNumber = this.randomObstacleNumber();
        System.out.println();
        System.out.println("Şuan buradasınız : "+this.getName());
        System.out.println("Dikkatli Ol ! Burada "+obsNumber+" tane "+this.getObstacle().getName()+" yaşıyor !");
        System.out.print("<S>avaş veya <K>aç");
        String selectCase = input.nextLine().toUpperCase();

        if(selectCase.equals("S")&& combat(obsNumber)){
            
            if(combat(obsNumber)){

                System.out.println(this.getName()+ " tüm düşmaları yendiniz !");
                return true;
                 
            }

          if(this.getPlayer().getHealth()<=0){
            System.out.println("Öldünüz !");
            return false; 
        }
    }

        return true;
    }

    public boolean combat(int obsNumber){
        for(int i=1; i<= obsNumber; i++){
            this.getObstacle().setHealth(this.getObstacle().getOrjinalHealth());
            playerStats();
            obstacleStats(i);
            while(this.getPlayer().getHealth()>0  && this.getObstacle().getHealth()>0){
                System.out.print("<V>urs ve ya <K>aç :");
                String selectCombatString = input.nextLine().toUpperCase();
                if(selectCombatString.equals("V")  && firstShot()==2 ){
                    System.out.println("Siz vurdunuz");
                    this.getObstacle().setHealth(this.getObstacle().getHealth()-this.getPlayer().getTotalDamage());
                    afterHit();
                    if(this.getObstacle().getHealth()>0){
                        System.out.println();
                        System.out.println("Canavar size vurdu !");
                        int obstacleDamage = this.getObstacle().getDamage()- this.getPlayer().getInventory().getArmor().getBlock();
                        if(obstacleDamage <0){
                            obstacleDamage =0;
                        }
                        this.getPlayer().setHealth(this.getPlayer().getHealth()-obstacleDamage);
                        afterHit();
                    }
                    else{
                        System.out.println("Rakip vurdu");
                        this.getObstacle().setHealth(this.getObstacle().getHealth()-this.getPlayer().getTotalDamage());
                        afterHit();
                        if(this.getObstacle().getHealth()>0){
                            System.out.println();
                            System.out.println("Canavar size vurdu !");
                            int obstacleDamage = this.getObstacle().getDamage()- this.getPlayer().getInventory().getArmor().getBlock();
                            if(obstacleDamage <0){
                                obstacleDamage =0;
                            }
                            this.getPlayer().setHealth(this.getPlayer().getHealth()-obstacleDamage);
                            afterHit();
                        }
                    } 

                }else{
                    return false;
                  }
            }
            if(this.getObstacle().getHealth()<this.getPlayer().getHealth()){
                System.out.println("Düşmanı yendiniz !");
                System.out.println(this.getObstacle().getAward()+" Para Kazandınız !");
                this.getPlayer().setMoney(this.getPlayer().getMoney()+this.getObstacle().getAward());
                System.out.println("Güncel Paranız"+this.getPlayer().getMoney());
            }else{
                return false;
            }
        }
        
        return true;
    }
   
    public void afterHit(){
        System.out.println("Canınız "+this.getPlayer().getHealth());
        System.out.println(this.getObstacle().getName()+" Canı: "+this.getObstacle().getHealth());
        System.out.println("-----------------------");
    }

    public void playerStats(){
        System.out.println("Oyuncunun değerleri");
        System.out.println("-----------------------");
        System.out.println("Sağlık: "+this.getPlayer().getHealth());
        System.out.println("Silah: "+this.getPlayer().getInventory().getWeapon().getName());
        System.out.println("Hasar: "+this.getPlayer().getTotalDamage());
        System.out.println("Zırh: "+this.getPlayer().getInventory().getArmor().getName());
        System.out.println("Bloklama: "+this.getPlayer().getInventory().getArmor().getBlock());
        System.out.println("Para: "+this.getPlayer().getMoney());
        System.out.println();
        
    }
    public void obstacleStats(int i){
        System.out.println(i+". "+this.getObstacle().getName()+" değerleri");
        System.out.println("-----------------------");
        System.out.println("Sağlık:  "+this.getObstacle().getHealth());
        System.out.println("Hasar:  "+this.getObstacle().getDamage());
        System.out.println("Ödül:  "+this.getObstacle().getAward());
        System.out.println();


    }
    private int firstShot(){
        Random r=new Random();
        //1 çıkarsa canavar, 2 çıkarsa player ilk vursun.
        int x= r.nextInt(1,3);
        return x;
    }

    public int  randomObstacleNumber(){
        Random r = new Random();
        // 0 sayısını ve ya parantez içine yazılan sayının 1 eksiğini getirir random sınıfı o nedenle 1 ekledik
        return r.nextInt(this.getMaxObstacle())+1;
    }

    public int getMaxObstacle() {
        return maxObstacle;
    }

    public void setMaxObstacle(int maxObstacle) {
        this.maxObstacle = maxObstacle;
    }

    public Obstacle getObstacle() {
        return obstacle;
    }

    public void setObstacle(Obstacle obstacle) {
        this.obstacle = obstacle;
    }

    public String getAward() {
        return award;
    }

    public void setAward(String award) {
        this.award = award;
    }
    
    
}
